* postgresql

** Sample create schema and insert query
  #+BEGIN_SRC sql

    -- Table: public."MCT_MY_COOL_TABLE"

    -- DROP TABLE public."MCT_MY_COOL_TABLE";

    CREATE TABLE public."MCT_MY_COOL_TABLE"
    (
    "MCT_ID" bigint NOT NULL,
    "MCT_STRING" character varying COLLATE pg_catalog."default"
    )
    WITH (
    OIDS = FALSE
    )
    TABLESPACE pg_default;

    ALTER TABLE public."MCT_MY_COOL_TABLE"
    OWNER to postgres;
    COMMENT ON TABLE public."MCT_MY_COOL_TABLE"
    IS 'apenas uma table';

    COMMENT ON COLUMN public."MCT_MY_COOL_TABLE"."MCT_ID"
    IS 'um id';

    COMMENT ON COLUMN public."MCT_MY_COOL_TABLE"."MCT_STRING"
    IS 'uma string';

    insert into public."MCT_MY_COOL_TABLE" ("MCT_ID", "MCT_STRING") VALUES(2, 'ola');

  #+END_SRC

* assorted SQL Tricks

** get the `nth` row of a select query:

#+BEGIN_SRC sql
select * from (
  select
    row_number() over (order by AVD_ID ASC) AS rownumber,
    avd.AVD_ID,
    avd.AVD_NM_AVALIADOR,
    avd.AVD_NM_AVALIANDO
  from
    AVD_AVALIACAO_DESEMP avd)
AS a where rownumber = 3;
#+END_SRC sql

** get the first `n` rows of a select:

#+BEGIN_SRC sql
/* just append the following clause to the query */
FETCH FIRST 1 ROWS ONLY
#+END_SRC sql
