* pacman tricks
** Retrieve a database cache from remote servers (yum makecache fast)
- tip taken from [[https://superuser.com/a/584131/555734][here]]

#+BEGIN_SRC sh
sudo pacman -Fy
#+END_SRC

** what package provides this command?

- with pacman
#+BEGIN_SRC sh
$ pacman -Fs ssh-keygen
core/openssh 7.2p2-1
    usr/bin/ssh-keygen
#+END_SRC

- or use [[https://superuser.com/a/584131/555734][pkgfile]]
#+BEGIN_SRC sh
$ sudo pkgfile -u
$ pkgfile -v ssh-keygen
core/openssh 7.2p2-1        /usr/bin/ssh-keygen
#+END_SRC

* Install
** NOTE
   - follow the arch wiki and complement with this section
** BIOS
*** disable secure boot on bios
*** TPM error (6)
    - had to disable the security chip in the thinkpad BIOS
*** enable intel virtualization on thinkpad
** create USB bootable pendrive
*** In MacOS

#+BEGIN_SRC sh
# in macos
diskutil list
diskutil unmountDisk /dev/diskX
# notice the 'r' before 'disk' for raw mode which makes the transfer much faster:
dd bs=4M if=/path/to/archlinux.iso of=/dev/rdiskX status=progress && sync
# After completion, macOS may complain that "The disk you inserted was not readable by this computer".
# Select 'Ignore'. The USB device will be bootable.
#+END_SRC

*** In Arch
**** using dd
- first, umount the pendrive
- then, write this:

#+BEGIN_SRC sh
$ sudo dd bs=4M if=/home/ninrod/Desktop/archlinux-2017.08.01-x86_64.iso of=/dev/sda status=progress && sync
#+END_SRC

**** using just cp
- see this [[https://www.debian.org/releases/stable/amd64/ch04s03.html.en#usb-copy-isohybrid][entry]] (debian manual)
#+BEGIN_SRC sh
# first verify if the disk is umounted. then:
$ cp debian.iso /dev/sda && sync
#+END_SRC
** boot into chroot: keyboard
   - loadkeys us-acentos
** setup wireless
   - wifi-menu, choose your wifi network
   - netctl start [yourchosenprofile]
** time and timezone
- timedatectl set-ntp true
- timedatectl list-timezones
- timedatectl set-timezone America/Sao_Paulo
** partitioning
*** gdisk

 - had to use gdisk to get a GPT/UEFI partition table
 - used a / and a /boot and a swap partition
 - the / had to be ext4 formated (mounted on /mnt)
 - the /boot, the EFI partition, had to be vfat formated (mounted on /mnt/boot)

*** parted
- more info [[https://wiki.archlinux.org/index.php/GNU_Parted#Usage][here]]
**** /boot vfat partition
- mkpart ESP fat32 1MiB 513MiB
- set 1 boot on
**** swap partition
- mkpart  primary linux-swap 513MiB 20GiB
**** / ext4 partition
- mkpart primary ext4 20GiB 100%
** formating
*** format the /boot (ESP) partition
- =mkfs.fat -F32 /dev/nvme0n1p1=
*** format the swap partition
- mkswap /dev/nvme0n1p2
*** format the / partition
- =mkfs.ext4 /dev/nvme0n1p3=
** mounting the partitions
#+BEGIN_SRC sh
$ mount /dev/nvme0n1p3 /mnt
$ mkdir /mnt/boot
$ mount /dev/nvme0n1p1 /mnt/boot
#+END_SRC
** choose mirrors
   - just select all brazil and all united states
   - use the rankmirror script
   - profit
** pacstrap
   - add base-devel, vim, zsh, git
#+BEGIN_SRC
sudo pacman -S base-devel parted
#+END_SRC
** fstab: add the swap partition (optional for gpt disks)
- after the genstab command, add this [[https://wiki.archlinux.org/index.php/swap#Swap_partition][entry]] to fstab
- protip: use this trick in vim

#+BEGIN_SRC sh
lsblk -no UUID /dev/nvme0n1p2 | vim -
# then in vim: :e /mnt/etc/fstab
#+END_SRC
** additional packages
#+BEGIN_SRC sh
sudo pacman -S terminus-font
sudo pacman -S vim zsh
sudo pacman -S git diff-so-fancy
#+END_SRC
** label partitions
   - name partitions using [[https://wiki.archlinux.org/index.php/Persistent_block_device_naming#by-partlabel][cgdisk]]
   - boot: ESP
   - swap: SWAP
   - /: SLASH
** intel microcode
   - install the microcode package
** git clone dotfiles
   - and place the /boot/UEFI/refind/refind.conf file accordingly
** reFind bootloader

 - had to manually edit the refind_linux.conf
 #+BEGIN_SRC sh
 "boot with std options" "root=/dev/nvme0n1p3 rw add_efi_memmap"
 #+END_SRC
 - this is because =refind-install= on the chroot env does not work
 - maybe if I restart and run refind-install in the fucked up restarted state it will work
 - anyway, git clone the dotfiles and copy the ~/.dotfiles/options/arch/boot/refind_linux.conf to the appropriate place and restart
** on restart: create ninrod user
useradd -m -g study -G wheel -s /bin/zsh ninrod
** sudo without a password

 - stolen from here: [[https://bbs.archlinux.org/viewtopic.php?id=7482][here]]
 - edit /etc/pam.d/sudo and set the following as the 1st line to allow wheel group to use sudo with no password :
 #+BEGIN_SRC sh
 auth           sufficient      pam_wheel.so trust use_uid
 #+END_SRC
 - edit the sudoers file
#+BEGIN_SRC sh
# add ninrod
ninrod ALL=(ALL) ALL
#+END_SRC

** wifi / networking
   - =netctl enable profile= to permanent add your profile

** wifi network strength query

#+BEGIN_SRC sh
$ iwconfig wlp4s0|grep -i --color quality
# or use wavemon (pacman -S wavemon)
#+END_SRC

* X
  - had to install xorg and xorg-xinit
* dropbox
* Great XKB hellish configuration
** a new hope: create options
   - blog [[https://realh.co.uk/wp/linux-keymap-hacking/][post]] looks promissing
   - SO [[https://unix.stackexchange.com/a/215062/155613][question]] also looks promising
   - SO [[https://unix.stackexchange.com/q/294286][question]] interesting links
   - [[https://www.charvolant.org/doug/xkb/html/node5.html][aqui]] you have a full keyboard layout displaying key codes
** resources
   - this arch linux specific [[https://wiki.archlinux.org/index.php/X_KeyBoard_extension][entry]] (arch wiki) (não explica quais arquivos você tem que criar)
   - see also [[https://wiki.archlinux.org/index.php/Keyboard_configuration_in_Xorg][this]] entry on arch wiki (keyboard configuration) (não explica quais arquivos você tem que criar)
   - see [[https://askubuntu.com/questions/325272/permanent-xmodmap-in-ubuntu-13-04/347382#347382?newreg=4eb097870a15490ebbe39d78412f9797][this]] SO answer (não ajudou)
   - and [[https://askubuntu.com/questions/684459/configure-caps-lock-as-altgr-and-arrows-like-in-vim/898462#898462][this]] (não ajudou)
   - and [[http://rlog.rgtti.com/2014/05/01/how-to-modify-a-keyboard-layout-in-linux/][this]] blog post by romano gianeti
   - and [[https://help.ubuntu.com/community/Custom%2520keyboard%2520layout%2520definitions?action=show&redirect=Howto%253A+Custom+keyboard+layout+definitions][this]] ubuntu tutorial
   - and [[https://ubuntuforums.org/showthread.php?t=1387812][this]] ubuntu blog post
   - and [[https://www.freedesktop.org/wiki/Software/XKeyboardConfig/][this]] entry on xdesktop site
   - um [[https://www.x.org/wiki/XKB/][monte]] de artigos sobre xkb
   - talvez [[https://unix.stackexchange.com/questions/318359/map-right-alt-to-ctrl-key][essa]] seja a solução para o alt
** step by step
*** system wide configuration
/usr/share/X11/xkb/symbols/
*** arquivos relevantes:
+ rules/evdev.lst
+ rules/evdev.xml
+ symbols/custom (maioria das customizações)
+ types/custom (não tem nada, só um boilerplate)
+ keycodes/custom (não tem nada, nada mesmo)
** fix alt_r -> contro_l e capslock -> esc
    altere essas linhas do /usr/share/X11/xkb/symbols/us, na seção =xkb_symbols "intl" {=
#+BEGIN_SRC sh
    //include "level3(ralt_switch)"
    include "ctrl(ralt_rctrl)"
    include "capslock(escape)"
#+END_SRC

- alternativamente, apenas crie um arquivo em  com o seguinte conteúdo e salve em /etc/X11/xorg.conf.d/90-custom-kbd.conf:
- mas não funciona para o alt. mesmo assim teria que descomentar a linha no us intl

#+BEGIN_SRC sh
Section "InputClass"
    Identifier "keyboard defaults"
    MatchIsKeyboard "on"
    Option "XKbOptions" "caps:escape"
EndSection
#+END_SRC

* keyboard
** fix lang
1. verify that you are not setting =$LANG= manually
2. uncomment pt_BR.UTF-8 in /etc/locale.gen
3. run =locale-gen=
4. certify that pt_BR is installed: run =localectl list-locales=
5. now install pt_BR: localectl set-locale LANG=pt_BR.UTF-8
6. reboot and login
** fix virtual console
   - just copy the ~/.options/arch/vconsole/vconsole.conf to /etc/vconsole.conf
** fix layout
*** fix layout

  - with help from [[https://wiki.archlinux.org/index.php/Keyboard_configuration_in_Xorg#Setting_keyboard_layout][arch wiki]]
  #+BEGIN_SRC sh
    localectl set-x11-keymap us pc104 intl
  #+END_SRC

*** fix cedilha in US-international with deadkeys
**** if using en_US.UTF-8 as lang

   - =NOTE=: if gtk or other correlated system files gets updated, you have to perfom this again!

   - originally stolen from: [[https://gist.github.com/ninrod/a29a99a20e695ba1a2ce7e774803a501][here]]
   #+BEGIN_SRC txt
   Author: Nilo Dantas - n1lo
   Based on: https://bugs.launchpad.net/ubuntu/+source/ibus/+bug/518056 - helio-valente post

   How to use Cedilha on US Keyboard on ArchLinux

   1) Put: English(US, internacional with dead Keys) on your system keyboard layout.
   2) Editing the files:
   sudo vim /usr/lib/gtk-3.0/3.0.0/immodules.cache
   sudo vim /usr/lib/gtk-2.0/2.10.0/immodules.cache

   changing the line

   "cedilla" "Cedilla" "gtk20" "/usr/share/locale" "az:ca:co:fr:gv:oc:pt:sq:tr:wa"
   to
   "cedilla" "Cedilla" "gtk20" "/usr/share/locale" "az:ca:co:fr:gv:oc:pt:sq:tr:wa:en"

   3) replacing "ć" to "ç" and "Ć" to "Ç" on /usr/share/X11/locale/en_US.UTF-8/Compose

   sudo cp /usr/share/X11/locale/en_US.UTF-8/Compose /usr/share/X11/locale/en_US.UTF-8/Compose.bak
   sed 's/ć/ç/g' < /usr/share/X11/locale/en_US.UTF-8/Compose | sed 's/Ć/Ç/g' > Compose
   sudo mv Compose /usr/share/X11/locale/en_US.UTF-8/Compose

   4) add two lines on /etc/environment

   GTK_IM_MODULE=cedilla
   QT_IM_MODULE=cedilla

   5)restart your computer
   #+END_SRC
**** if using pt_BR.UTF-8 as lang
     - no need to do anything
* bspwm
** touchpad
   eu botei o seguinte arquivo em /etc/X11/xorg.conf.d/30-touchpad.conf
 #+BEGIN_SRC sh
 # configs de touchpad
 Section "InputClass"
         Identifier "libinput touchpad catchall"
         MatchIsTouchpad "on"
         MatchDevicePath "/dev/input/event*"
         Driver "libinput"
	 Option "Tapping" "on"
 EndSection
 #+END_SRC

** pacaur
   - install from AUR.
** aur
   - install cower and pacaur from AUR
** polybar
   - pacaur -S ttf-font-awesome office-code-pro adobe-source-code-pro-fonts ttf-iosevka-term-ss07
   - xf86-video-intel
   - from https://github.com/jaagr/polybar/issues/176#issuecomment-261817530
     - pacman -S wireless_tools
   - pacaur -S polybar-git
** fonts
*** install non latin fonts

- from [[https://wiki.archlinux.org/index.php/fonts#Non-latin_scripts][here]]
- adobe-source-han-sans-otc-fonts - Sans fonts
- adobe-source-han-serif-otc-fonts - Serif fonts
- ttf-hannom

** dropbox
   - pacaur -S xdg-utils
   - pacaur -S dropbox-cli
   - pacman -S nautilus
   - pacaur -S nautilus-dropbox
   - dropbox-cli start
** additional tools
   - pacman -S udiskie
   - pacman -S xfce4-terminal
   - pacaur -S physlock
   - pacman -S maim
   - pacman -S bspwm sxhkd dmenu
   - pacman -S rsync
   - evince (pdf readers)
   - mpv and mpd
** audio
   - install alsa-utils
   - $ amixer sset Master unmute
   - install pulseaudio and pulseaudio-alsa
   - install pavucontrol and tweak settings and umute things
   - pavucontrol is actually the volume slider, as is alsamixer
** java
*** use the impersonate another window manager trick (wmname)(to run intellij, etc...)
    - https://wiki.archlinux.org/index.php/java#Impersonate_another_window_manager
    - This works because the JVM contains a hard-coded list of known, non-re-parenting window managers. For maximum irony,
some users prefer to impersonate LG3D, the non-re-parenting window manager
    - the working command is =wmname LG3D=
    - this is already setup in the ninrod/dotfiles repo
    - you just have to go to =~/.dotfiles= and type =make=
*** use the AUR version of the community edition, that comes bundled with a jetbrains JRE
    - [[https://aur.archlinux.org/packages/intellij-idea-ce/][intellij-idea-ce]]
** whatsapp
   - install whatsie from AUR
** telegram
   - pacaur -S telegram-desktop-bin
* firefox-quantum
  - [[https://fedoramagazine.org/how-to-get-firefox-looking-right-on-a-high-dpi-display-and-fedora/][ajustando ui-scale (zoom)]]
* docker
  - read arch wiki entry on docker
  - pacman -S docker
  - had to add ninrod to group docker
  - systemctl start docker.service
  - systemctl enable docker.service
* xdg-open
** to set default apps for filetypes
   - taken from [[https://bbs.archlinux.org/viewtopic.php?id=93956][here]]
#+BEGIN_SRC sh

  # Get the registered filetype of the file (NB. I just picked a pdf file)
  $ xdg-mime query filetype Documents/Stuff/Stuff.pdf
  application/pdf; charset=binary

  # Make evince the default for opening files of type application/pdf
  $ xdg-mime default evince.desktop application/pdf
  $ xdg-mime query default application/pdf
  evince.desktop

  # Confirmation that the default took
  $ xdg-open Documents/Stuff/Stuff.pdf
  method return sender=:1.6 -> dest=:1.27 reply_serial=2

#+END_SRC
* mount, umount, eject pendrives on the command line
  - install =udiskie=. it will auto mount pendrives for you.
** info
   - see [[https://askubuntu.com/a/859798/685029][this]] SO answer
   - and [[https://unix.stackexchange.com/a/45821/155613][this]]
   - and also [[https://unix.stackexchange.com/a/178648/155613][this]]
   - udiskie already auto mounts pendrives for you.
** the simple way step
   1. identify the disk with =lsblk -fm=
   2. verify if the disk is already mounted with =df -h=
   3. umont with =sudo umount /mnt/sdn=, or =sudo umount /dev/sdxm=
** the professional way (udiskie)
   1. identify the disk with =lsblk -fm=
   2. verify if the disk is already mounted with =df -h=
   3. =udisksctl unmount -b /dev/sda1= (use this to just umount the drive)
   4. =udisksctl power-off -b /dev/sda=

* github
** generate ssh-key

- stolen from [[http://www.w3docs.com/snippets/git/how-to-generate-ssh-key-for-git.html][here]]
#+BEGIN_SRC sh
# generate key
ssh-keygen -t rsa -b 4096 -C "[your github's email]" # then enter, enter, enter

# start ssh-agent
eval "$(ssh-agent -s)"
> Agent pid 59566

# add key to ssh-agent
ssh-add ~/.ssh/id_rsa

# add key to github
cat .ssh/id_rsa.pub
#+END_SRC
* battery life
  - =pacman -S acpi; acpi -V=
  - tlp stat
* hdmi
** video
   - just use xrandr
   - =xrandr --output HDMI2 --auto=
** audio
   - just use pavucontrol
* infernal beep
  - taken from [[https://wiki.archlinux.org/index.php/PC_speaker][here]]
  #+BEGIN_SRC sh
    echo "blacklist pcspkr" > /etc/modprobe.d/nobeep.conf
  #+END_SRC
* screenshots

#+BEGIN_SRC sh
$ pacman -S maim
$ maim screenshot.png
$ maim -d 5 screenshot.png # pause for 5 seconds
$ maim -s shot.png # select an area, or window (just click on the window)
$ man maim # for more options
#+END_SRC
* video
  - mpv
* font management
** font/char viewer (fontawesome, nerdfonts, material icons, etc...)
   - tip from [[https://redd.it/6l3ivb][here]]
   - pacman -S =gucharmap=
** viewing available fonts
   - =$ fc-list=
* julicloud | wdmycloudx2 | nfs
  1. export the share as NFS
  2. showmount -e server
  3. nmap: =nmap -p 111 192.168.0.0/24=
  4. =sudo mount server:/path/of/the/mount /mnt/mountpoint=
* mpd + ncmpcpp
  - pacman -S mpd ncmpcpp
  - ncmpcpp [[https://wiki.archlinux.org/index.php/Ncmpcpp][arch wiki]]
  - mpd [[https://wiki.archlinux.org/index.php/Music_Player_Daemon][arch wiki]]
* gpg and pass
- [[https://superuser.com/questions/813421/can-you-extend-the-expiration-date-of-an-already-expired-gpg-key/814663#814663][extend the expiration date of an already expired key]]
* video recording
  - [[https://wiki.archlinux.org/%209.php/FFmpeg#Package_installation][ffmpeg]]
* dictionary
  - install aspell-en and aspell-pt
* caveats, pitfalls and traps
  - don't install =ibus=. If you do that, inkscape and visual studio code will not work, among other things.
  - do not use gtk_module=anything globally. It will fuck up many apps, including thunar, darktable and inkscape.
